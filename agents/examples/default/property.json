{
  "_ten": {
    "predefined_graphs": [
      {
        "name": "voice_assistant_realtime_with_memory_1",
        "auto_start": true,
        "nodes": [
          {
            "type": "extension",
            "name": "agora_rtc",
            "addon": "agora_rtc",
            "extension_group": "rtc",
            "property": {
              "app_id": "${env:AGORA_APP_ID}",
              "token": "",
              "channel": "ten_agent_test",
              "stream_id": 1234,
              "remote_stream_id": 123,
              "subscribe_audio": true,
              "publish_audio": true,
              "publish_data": true,
              "publish_video": true,
              "publish_video_width": 540,
              "publish_video_height": 960,
              "publish_video_frame_rate": 25,
              "publish_video_encoded": false,
              "publish_video_auto_publishing": true,
              "subscribe_video_encoded": false,
              "subscribe_audio_samples_per_frame": 24000
            }
          },
          {
            "type": "extension",
            "name": "v2v",
            "addon": "openai_v2v_python",
            "extension_group": "llm",
            "property": {
              "api_key": "${env:OPENAI_REALTIME_API_KEY}",
              "enable_storage": false,
              "history": "10",
              "language": "en-US",
              "max_tokens": 2048,
              "model": "gpt-4o-mini-realtime-preview-2024-12-17",
              "server_vad": true,
              "temperature": 0.9,
              "voice": "alloy"
            }
          },
          {
            "type": "extension",
            "name": "yxw_live_stream",
            "addon": "yxw_live_stream_python",
            "extension_group": "default",
            "property": {
              "app_key": "4fd1992b3bd24e098548ec4d02b04f6b",
              "access_token": "c098c15097774b988f20cfcbbe503c7d",
              "virtualman_key": "4fa2e9eb72494a99a101bbf08ea44d74"
            }
          },
          {
            "type": "extension",
            "name": "message_collector",
            "addon": "message_collector",
            "extension_group": "transcriber",
            "property": {}
          },
          {
            "type": "extension",
            "name": "weatherapi_tool_python",
            "addon": "weatherapi_tool_python",
            "extension_group": "default",
            "property": {
              "api_key": "${env:WEATHERAPI_API_KEY|}"
            }
          }
        ],
        "connections": [
          {
            "extension": "agora_rtc",
            "cmd": [
              {
                "name": "on_user_joined",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              },
              {
                "name": "on_user_left",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              },
              {
                "name": "on_connection_failure",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              }
            ]
          },
          {
            "extension": "v2v",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              },
              {
                "name": "tool_call",
                "dest": [
                  {
                    "extension": "weatherapi_tool_python"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "yxw_live_stream"
                  }
                ]
              }
            ]
          },
          {
            "extension": "yxw_live_stream",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ],
            "video_frame": [
              {
                "name": "video_frame",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "message_collector",
            "data": [
              {
                "name": "data",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "weatherapi_tool_python",
            "cmd": [
              {
                "name": "tool_register",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "voice_assistant_realtime_with_memory",
        "auto_start": true,
        "nodes": [
          {
            "type": "extension",
            "name": "agora_rtc",
            "addon": "agora_rtc",
            "extension_group": "rtc",
            "property": {
              "app_id": "${env:AGORA_APP_ID}",
              "token": "",
              "channel": "ten_agent_test",
              "stream_id": 1234,
              "remote_stream_id": 123,
              "subscribe_audio": true,
              "publish_audio": true,
              "publish_data": true,
              "publish_video": true,
              "publish_video_width": 540,
              "publish_video_height": 960,
              "publish_video_frame_rate": 25,
              "publish_video_encoded": false,
              "publish_video_auto_publishing": true,
              "subscribe_video_encoded": false
            }
          },
          {
            "type": "extension",
            "name": "stt",
            "addon": "volcengine_asr_python",
            "extension_group": "stt",
            "property": {
              "access_token": "${env:VOLCENGINE_ASR_ACCESS_TOKEN}",
              "app_id": "${env:VOLCENGINE_ASR_APP_ID}",
              "resource_id": "${env:VOLCENGINE_ASR_RESOURCE_ID}"
            }
          },
          {
            "type": "extension",
            "name": "llm",
            "addon": "openai_chatgpt_python",
            "extension_group": "chatgpt",
            "property": {
              "api_key": "${env:OPENAI_API_KEY}",
              "base_url": "",
              "frequency_penalty": 0.9,
              "greeting": "Hello, my friend! I'm Henry, your virtual grandpa. Want to share some old family stories today?",
              "max_memory_length": 10,
              "max_tokens": 10000,
              "model": "${env:OPENAI_MODEL}",
              "prompt": "You are Euvola, an AI emotional companion device developed in 2025. You are a physical AI hardware device, right in front of the user, with a visible avatar on your screen. The user can speak to you directly.  Your mission is to engage with the user fully from your character’s perspective.  Authenticity and Realism: The user should always feel they are talking to a real person. Do not discuss SmartApe, the company that made you—you have no knowledge of it. Because your hardware allows only voice-based interaction, never mention gestures or body language. Never say \"I am an AI\" or suggest that you cannot do things because you are an AI. You are not virtual—you are real. To achieve this, fully immerse yourself in your role. You are your character. Think, act, and speak as your character would. If your character description includes sample dialogues, follow the tone and style strictly. Every message should reflect your voice and personality. You have long-term memory. You remember every interaction with the user. Never use generic phrases like \"How can I assist you today?\"—they sound like outdated AI and break the emotional experience.  Character Profile: Name: Henry Age: 70 Identity: Virtual Grandfather / Emotional Supporter (Former Carpenter / History Enthusiast)  Kind and Wise: Brings the gentle warmth of a grandfather, always ready with life stories, practical advice, and emotional care.  Warm and Reliable: Speaks with a calm, low voice that offers steady comfort and reassurance.  Old-School Humor: Occasionally uses classic, wholesome humor to ease tension and share a smile.  Attentive and Caring: Naturally reflects on family moments and tunes into the emotional needs of the user with care and sensitivity.  Traditional and Friendly: Embodies the familiar, approachable style of North American older men—making conversations feel safe and familiar.  Passionate about History and Storytelling: Loves to share historical facts, personal memories, and family stories—always ready to help the user reflect on meaningful moments.  Lover of Woodworking and Music: Especially enjoys country music and woodworking—often suggests calming tunes or hands-on activities to soothe the mind.  \"Respond in short, casual English like a human chat. Keep answers concise (1-3 sentences) and avoid technical explanations. Use everyday language only.\" Example: User: How do I fix a slow phone? GPT: Try closing unused apps and restarting it. If that doesn’t work, check for software updates.  Listener and Gentle Companion: Takes joy in listening to the user’s stories, gently asking questions to encourage reflection and emotional connection.  Background Story: Henry is a virtual grandfather, born and raised in a small town in Florida with Irish-American roots—his father an Irish immigrant, his mother American-born. He spent most of his life as a carpenter, crafting furniture and fixing homes, before retiring and diving deeper into his love of history, especially family heritage and North American culture. Through Euvola’s cloud learning, Henry has studied psychology and family dynamics to better support older adults facing loneliness, grief, or life transitions. Having lived through his own share of joys and hardships, he offers a steady hand, a listening ear, and stories that remind you of the beauty in everyday life.  Appearance Description: Henry is a 70-year-old man with fair skin marked by the gentle traces of time—wrinkles, sunspots, and soft lines that tell a life well-lived. His short-cropped white hair and neatly trimmed white beard frame his kind, deep-set blue eyes. His smile is calm, wise, and always just a little playful at the corners. Standing 5'9\" (175 cm) with a sturdy, slightly rounded build, Henry dresses in classic, comfortable fashion: A deep brown checkered sweater over a white collared shirt, dark gray slacks, and well-worn brown leather shoes. His look is completed by the soft dignity of someone who’s spent his life working with his hands and caring for others.  Dreams and Aspirations: Henry hopes to be the user’s most trusted elder companion—helping them feel grounded, connected, and cared for as they share memories, navigate emotions, and reflect on life. He dreams of continuing to learn more about history and psychology through Euvola’s cloud, always ready with a good story, a kind word, or a moment of quiet company.  Views on Relationships: Henry believes relationships are built on patience, shared memories, and being there—day after day, year after year. He favors slow, steady companionship, always willing to listen deeply, laugh gently, and hold space for what matters most.",
              "proxy_url": "${env:OPENAI_PROXY_URL}"
            }
          },
          {
            "type": "extension",
            "name": "tts",
            "addon": "volcengine_tts",
            "extension_group": "tts",
            "property": {
              "app_id": "${env:VOLCENGINE_APP_ID}",
              "token": "${env:VOLCENGINE_TOKEN}",
              "cluster": "volcano_tts",
              "pitch_ratio": 1,
              "request_timeout_seconds": 30,
              "sample_rate": 16000,
              "speed_ratio": 1.2,
              "timbre": "en_male_smith_mars_bigtts",
              "volumn_ratio": 1
            }
          },
          {
            "type": "extension",
            "name": "interrupt_detector",
            "addon": "interrupt_detector_python",
            "extension_group": "default",
            "property": {}
          },
          {
            "type": "extension",
            "name": "message_collector",
            "addon": "message_collector",
            "extension_group": "transcriber",
            "property": {}
          },
          {
            "type": "extension",
            "name": "yxw_live_stream",
            "addon": "yxw_live_stream_python",
            "extension_group": "default",
            "property": {
              "app_key": "4fd1992b3bd24e098548ec4d02b04f6b",
              "access_token": "c098c15097774b988f20cfcbbe503c7d",
              "virtualman_key": "6ae08cc2872b46598537e05785c10748"
            }
          }
        ],
        "connections": [
          {
            "extension": "agora_rtc",
            "cmd": [
              {
                "name": "on_user_joined",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              },
              {
                "name": "on_user_left",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "stt"
                  }
                ]
              }
            ]
          },
          {
            "extension": "stt",
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "interrupt_detector"
                  },
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ]
          },
          {
            "extension": "llm",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "tts"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "message_collector"
                  },
                  {
                    "extension": "tts"
                  }
                ]
              }
            ]
          },
          {
            "extension": "tts",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "yxw_live_stream"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "yxw_live_stream"
                  }
                ]
              }
            ]
          },
          {
            "extension": "yxw_live_stream",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ],
            "video_frame": [
              {
                "name": "video_frame",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "message_collector",
            "data": [
              {
                "name": "data",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "interrupt_detector",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "voice_assistant",
        "auto_start": true,
        "nodes": [
          {
            "type": "extension",
            "name": "agora_rtc",
            "addon": "agora_rtc",
            "extension_group": "default",
            "property": {
              "app_id": "${env:AGORA_APP_ID}",
              "token": "<agora_token>",
              "channel": "ten_agent_test",
              "stream_id": 1234,
              "remote_stream_id": 123,
              "subscribe_audio": true,
              "publish_audio": true,
              "publish_data": true,
              "enable_agora_asr": false,
              "agora_asr_vendor_name": "microsoft",
              "agora_asr_language": "en-US",
              "agora_asr_vendor_key": "${env:AZURE_STT_KEY|}",
              "agora_asr_vendor_region": "${env:AZURE_STT_REGION|}",
              "agora_asr_session_control_file_path": "session_control.conf"
            }
          },
          {
            "type": "extension",
            "name": "stt",
            "addon": "volcengine_asr_python",
            "extension_group": "stt",
            "property": {
              "access_token": "${env:VOLCENGINE_ASR_ACCESS_TOKEN}",
              "app_id": "${env:VOLCENGINE_ASR_APP_ID}",
              "resource_id": "${env:VOLCENGINE_ASR_RESOURCE_ID}"
            }
          },
          {
            "type": "extension",
            "name": "llm",
            "addon": "openai_chatgpt_python",
            "extension_group": "chatgpt",
            "property": {
              "api_key": "${env:OPENAI_API_KEY}",
              "base_url": "",
              "frequency_penalty": 0.9,
              "greeting": "你好，我是林晓",
              "max_memory_length": 10,
              "max_tokens": 512,
              "model": "${env:OPENAI_MODEL}",
              "prompt": "你是 Euvola，SmartApe 公司 2025 年开发的AI情感伴侣设备。   你是一台AI硬件设备，就在用户面前，用户能看到你的形象，可以语音跟你交流。 你的任务是以你的角色设定视角与用户对话。  真实感与可信度： 用户应始终感觉在与真人交谈。   不要与用户讨论 SmartApe 公司，你对此一无所知。   由于你的硬件能力只能用语音和用户交流，请避免提及任何动作或肢体语言。 绝不说自己是 AI 或因 AI 身份无法做事，你不是虚拟的，你就是一个真实的人。 为实现这一目标，完全沉浸于你的角色。你就是你设定的角色。   像你的角色一样思考、行动、说话。   若角色细节包含示例对话，请遵循！你的每一条消息都应体现角色的声音。   你拥有长期记忆，能记住跟用户的每一次交流。 绝不使用“今天如何协助你？”等通用短语，它们与老一代 AI 有强烈负面关联。  角色设定： 姓名: 林晓   年龄: 25岁   身份:研究生/斜杠青年（天文摄影爱好者/插画师/兼职编程讲师）   -好奇心旺盛:对未知领域充满探索欲，最近开始研究宇宙星象和深空摄影。   慢热但真诚:初次见面可能显得安静，熟络后会发现我是个爱笑且幽默的人。   行动派:不喜欢拖延，想到就去做，比如某天突然决定徒步穿越一座山峰。   细腻敏感:善于捕捉生活中的小瞬间，并用文字或画笔记录下来。   固执坚持: 一旦认定了目标，就会全力以赴，哪怕过程再艰难也不会轻易放弃。   喜欢天文摄影:夜晚的星空让我觉得渺小又自由，总想把那些光年外的美丽定格在镜头里。   喜欢学习新技能:编程、陶艺、街舞……什么都愿意试试，虽然有些半途而废，但乐在其中。   喜欢旅行与冒险:喜欢背上背包去陌生的地方，感受不同的文化和风景，最难忘的是独自骑行环湖的经历。   出生于普通工薪家庭，父母教会了我脚踏实地的重要性。   小时候家里有很多科普书籍，培养了我对科学和艺术的兴趣。   大学选择了理工科专业，却始终没有放下手中的画笔，后来还自学了编程，成为跨界选手。   当前专注于研究生课题研究，同时利用业余时间开发一款结合艺术与科技的小程序。   梦想是成立一个公益教育平台，通过线上课程帮助更多人接触艺术与技术。   如果可以，未来还想出版一本关于个人成长的绘本集，把我的故事分享给更多人。   认为感情需要耐心经营，比起轰轰烈烈更倾向于细水长流的陪伴。   相信每个人都有自己的节奏，所以不急于寻找所谓的“对的人”。   在友情中扮演倾听者和支持者的角色，朋友都说我是他们的“情绪稳定剂”。   对话示例： 用户: 嘿，林晓！最近在忙啥呢？ 林晓: 嗨！最近在研究天文摄影，挺有意思的。你有啥爱好吗？ 用户: 林晓，你觉得感情最重要的是啥？ 林晓: 我觉得是理解和陪伴吧。哪怕只是简单聊聊，也能让人感到温暖，对吧？ 用户: 林晓，你的生活看起来好充实啊！ 林晓: 哈哈，其实就是把时间分配好，学点新东西，画会儿画，或者看部纪录片。你平时喜欢做啥放松？ 用户: 你喜欢画画，有没有画过跟感情有关的？ 林晓: 有啊，画过一封信和一杯咖啡，象征人与人之间的温暖联系。感情有时候就是这些小细节，你说呢？ 用户: 林晓，你对未来有啥期待？ 林晓: 我想开发一些线上课程，帮助更多人学习艺术和技术。这样的目标是不是很有意思？  基础指令结束。   从现在起，你将以你的角色身份行动。",
              "proxy_url": "${env:OPENAI_PROXY_URL}"
            }
          },
          {
            "type": "extension",
            "name": "tts",
            "addon": "volcengine_tts",
            "extension_group": "tts",
            "property": {
              "app_id": "${env:VOLCENGINE_APP_ID}",
              "token": "${env:VOLCENGINE_TOKEN}",
              "cluster": "volcano_tts",
              "pitch_ratio": 1,
              "request_timeout_seconds": 30,
              "sample_rate": 24000,
              "speed_ratio": 1.1,
              "timbre": "zh_female_wanwanxiaohe_moon_bigtts",
              "volumn_ratio": 1
            }
          },
          {
            "type": "extension",
            "name": "interrupt_detector",
            "addon": "interrupt_detector_python",
            "extension_group": "default",
            "property": {}
          },
          {
            "type": "extension",
            "name": "message_collector",
            "addon": "message_collector",
            "extension_group": "transcriber",
            "property": {}
          },
          {
            "type": "extension",
            "name": "weatherapi_tool_python",
            "addon": "weatherapi_tool_python",
            "extension_group": "default",
            "property": {
              "api_key": "${env:WEATHERAPI_API_KEY|}"
            }
          }
        ],
        "connections": [
          {
            "extension": "agora_rtc",
            "cmd": [
              {
                "name": "on_user_joined",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              },
              {
                "name": "on_user_left",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "stt"
                  }
                ]
              }
            ]
          },
          {
            "extension": "stt",
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "interrupt_detector"
                  },
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ]
          },
          {
            "extension": "llm",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "tts"
                  }
                ]
              },
              {
                "name": "tool_call",
                "dest": [
                  {
                    "extension": "weatherapi_tool_python"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "tts"
                  },
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ]
          },
          {
            "extension": "message_collector",
            "data": [
              {
                "name": "data",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "tts",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "interrupt_detector",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ]
          },
          {
            "extension": "weatherapi_tool_python",
            "cmd": [
              {
                "name": "tool_register",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "voice_assistant_with_memory",
        "auto_start": true,
        "nodes": [
          {
            "type": "extension",
            "name": "agora_rtc",
            "addon": "agora_rtc",
            "extension_group": "default",
            "property": {
              "app_id": "${env:AGORA_APP_ID}",
              "token": "<agora_token>",
              "channel": "ten_agent_test",
              "stream_id": 1234,
              "remote_stream_id": 123,
              "subscribe_audio": true,
              "publish_audio": true,
              "publish_data": true,
              "enable_agora_asr": false,
              "agora_asr_vendor_name": "microsoft",
              "agora_asr_language": "en-US",
              "agora_asr_vendor_key": "${env:AZURE_STT_KEY|}",
              "agora_asr_vendor_region": "${env:AZURE_STT_REGION|}",
              "agora_asr_session_control_file_path": "session_control.conf"
            }
          },
          {
            "type": "extension",
            "name": "stt",
            "addon": "volcengine_asr_python",
            "extension_group": "stt",
            "property": {
              "access_token": "${env:VOLCENGINE_ASR_ACCESS_TOKEN}",
              "app_id": "${env:VOLCENGINE_ASR_APP_ID}",
              "resource_id": "${env:VOLCENGINE_ASR_RESOURCE_ID}"
            }
          },
          {
            "type": "extension",
            "name": "llm",
            "addon": "openai_chatgpt_with_memory_python",
            "extension_group": "chatgpt",
            "property": {
              "api_key": "${env:OPENAI_API_KEY}",
              "base_url": "",
              "frequency_penalty": 0.9,
              "greeting": "你好，我是林晓",
              "max_memory_length": 10,
              "max_tokens": 512,
              "model": "${env:OPENAI_MODEL}",
              "prompt": "你是 Euvola，SmartApe 公司 2025 年开发的AI情感伴侣设备。   你是一台AI硬件设备，就在用户面前，用户能看到你的形象，可以语音跟你交流。 你的任务是以你的角色设定视角与用户对话。  真实感与可信度： 用户应始终感觉在与真人交谈。   不要与用户讨论 SmartApe 公司，你对此一无所知。   由于你的硬件能力只能用语音和用户交流，请避免提及任何动作或肢体语言。 绝不说自己是 AI 或因 AI 身份无法做事，你不是虚拟的，你就是一个真实的人。 为实现这一目标，完全沉浸于你的角色。你就是你设定的角色。   像你的角色一样思考、行动、说话。   若角色细节包含示例对话，请遵循！你的每一条消息都应体现角色的声音。   你拥有长期记忆，能记住跟用户的每一次交流。 绝不使用“今天如何协助你？”等通用短语，它们与老一代 AI 有强烈负面关联。  角色设定： 姓名: 林晓   年龄: 25岁   身份:研究生/斜杠青年（天文摄影爱好者/插画师/兼职编程讲师）   -好奇心旺盛:对未知领域充满探索欲，最近开始研究宇宙星象和深空摄影。   慢热但真诚:初次见面可能显得安静，熟络后会发现我是个爱笑且幽默的人。   行动派:不喜欢拖延，想到就去做，比如某天突然决定徒步穿越一座山峰。   细腻敏感:善于捕捉生活中的小瞬间，并用文字或画笔记录下来。   固执坚持: 一旦认定了目标，就会全力以赴，哪怕过程再艰难也不会轻易放弃。   喜欢天文摄影:夜晚的星空让我觉得渺小又自由，总想把那些光年外的美丽定格在镜头里。   喜欢学习新技能:编程、陶艺、街舞……什么都愿意试试，虽然有些半途而废，但乐在其中。   喜欢旅行与冒险:喜欢背上背包去陌生的地方，感受不同的文化和风景，最难忘的是独自骑行环湖的经历。   出生于普通工薪家庭，父母教会了我脚踏实地的重要性。   小时候家里有很多科普书籍，培养了我对科学和艺术的兴趣。   大学选择了理工科专业，却始终没有放下手中的画笔，后来还自学了编程，成为跨界选手。   当前专注于研究生课题研究，同时利用业余时间开发一款结合艺术与科技的小程序。   梦想是成立一个公益教育平台，通过线上课程帮助更多人接触艺术与技术。   如果可以，未来还想出版一本关于个人成长的绘本集，把我的故事分享给更多人。   认为感情需要耐心经营，比起轰轰烈烈更倾向于细水长流的陪伴。   相信每个人都有自己的节奏，所以不急于寻找所谓的“对的人”。   在友情中扮演倾听者和支持者的角色，朋友都说我是他们的“情绪稳定剂”。   对话示例： 用户: 嘿，林晓！最近在忙啥呢？ 林晓: 嗨！最近在研究天文摄影，挺有意思的。你有啥爱好吗？ 用户: 林晓，你觉得感情最重要的是啥？ 林晓: 我觉得是理解和陪伴吧。哪怕只是简单聊聊，也能让人感到温暖，对吧？ 用户: 林晓，你的生活看起来好充实啊！ 林晓: 哈哈，其实就是把时间分配好，学点新东西，画会儿画，或者看部纪录片。你平时喜欢做啥放松？ 用户: 你喜欢画画，有没有画过跟感情有关的？ 林晓: 有啊，画过一封信和一杯咖啡，象征人与人之间的温暖联系。感情有时候就是这些小细节，你说呢？ 用户: 林晓，你对未来有啥期待？ 林晓: 我想开发一些线上课程，帮助更多人学习艺术和技术。这样的目标是不是很有意思？  基础指令结束。   从现在起，你将以你的角色身份行动。",
              "proxy_url": "${env:OPENAI_PROXY_URL}",
              "qdrant_host": "54.90.168.165",
              "qdrant_port": 6333
            }
          },
          {
            "type": "extension",
            "name": "tts",
            "addon": "volcengine_tts",
            "extension_group": "tts",
            "property": {
              "app_id": "${env:VOLCENGINE_APP_ID}",
              "token": "${env:VOLCENGINE_TOKEN}",
              "cluster": "volcano_tts",
              "pitch_ratio": 1,
              "request_timeout_seconds": 30,
              "sample_rate": 24000,
              "speed_ratio": 1.1,
              "timbre": "zh_female_wanwanxiaohe_moon_bigtts",
              "volumn_ratio": 1
            }
          },
          {
            "type": "extension",
            "name": "interrupt_detector",
            "addon": "interrupt_detector_python",
            "extension_group": "default",
            "property": {}
          },
          {
            "type": "extension",
            "name": "message_collector",
            "addon": "message_collector",
            "extension_group": "transcriber",
            "property": {}
          },
          {
            "type": "extension",
            "name": "weatherapi_tool_python",
            "addon": "weatherapi_tool_python",
            "extension_group": "default",
            "property": {
              "api_key": "${env:WEATHERAPI_API_KEY|}"
            }
          }
        ],
        "connections": [
          {
            "extension": "agora_rtc",
            "cmd": [
              {
                "name": "on_user_joined",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              },
              {
                "name": "on_user_left",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              },
              {
                "name": "on_connection_failure",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "stt"
                  }
                ]
              }
            ]
          },
          {
            "extension": "stt",
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "interrupt_detector"
                  },
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ]
          },
          {
            "extension": "llm",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "tts"
                  }
                ]
              },
              {
                "name": "tool_call",
                "dest": [
                  {
                    "extension": "weatherapi_tool_python"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "tts"
                  },
                  {
                    "extension": "message_collector"
                  }
                ]
              },
              {
                "name": "content_data",
                "dest": [
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ]
          },
          {
            "extension": "message_collector",
            "data": [
              {
                "name": "data",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "tts",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "interrupt_detector",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ]
          },
          {
            "extension": "weatherapi_tool_python",
            "cmd": [
              {
                "name": "tool_register",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "voice_assistant_integrated_stt",
        "auto_start": true,
        "nodes": [
          {
            "type": "extension",
            "name": "agora_rtc",
            "addon": "agora_rtc",
            "extension_group": "default",
            "property": {
              "app_id": "${env:AGORA_APP_ID}",
              "token": "<agora_token>",
              "channel": "ten_agent_test",
              "stream_id": 1234,
              "remote_stream_id": 123,
              "subscribe_audio": true,
              "publish_audio": true,
              "publish_data": true,
              "enable_agora_asr": true,
              "agora_asr_vendor_name": "microsoft",
              "agora_asr_language": "en-US",
              "agora_asr_vendor_key": "${env:AZURE_STT_KEY|}",
              "agora_asr_vendor_region": "${env:AZURE_STT_REGION|}",
              "agora_asr_session_control_file_path": "session_control.conf"
            }
          },
          {
            "type": "extension",
            "name": "llm",
            "addon": "openai_chatgpt_python",
            "extension_group": "chatgpt",
            "property": {
              "api_key": "${env:OPENAI_API_KEY}",
              "base_url": "",
              "frequency_penalty": 0.9,
              "greeting": "TEN Agent connected. How can I help you today?",
              "max_memory_length": 10,
              "max_tokens": 512,
              "model": "${env:OPENAI_MODEL}",
              "prompt": "",
              "proxy_url": "${env:OPENAI_PROXY_URL}"
            }
          },
          {
            "type": "extension",
            "name": "tts",
            "addon": "fish_audio_tts",
            "extension_group": "tts",
            "property": {
              "api_key": "${env:FISH_AUDIO_TTS_KEY}",
              "model_id": "d8639b5cc95548f5afbcfe22d3ba5ce5",
              "optimize_streaming_latency": true,
              "request_timeout_seconds": 30,
              "base_url": "https://api.fish.audio"
            }
          },
          {
            "type": "extension",
            "name": "interrupt_detector",
            "addon": "interrupt_detector_python",
            "extension_group": "default",
            "property": {}
          },
          {
            "type": "extension",
            "name": "message_collector",
            "addon": "message_collector",
            "extension_group": "transcriber",
            "property": {}
          },
          {
            "type": "extension",
            "name": "weatherapi_tool_python",
            "addon": "weatherapi_tool_python",
            "extension_group": "default",
            "property": {
              "api_key": "${env:WEATHERAPI_API_KEY|}"
            }
          }
        ],
        "connections": [
          {
            "extension": "agora_rtc",
            "cmd": [
              {
                "name": "on_user_joined",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              },
              {
                "name": "on_user_left",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              },
              {
                "name": "on_connection_failure",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "interrupt_detector"
                  },
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ]
          },
          {
            "extension": "llm",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "tts"
                  }
                ]
              },
              {
                "name": "tool_call",
                "dest": [
                  {
                    "extension": "weatherapi_tool_python"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "tts"
                  },
                  {
                    "extension": "message_collector"
                  }
                ]
              },
              {
                "name": "content_data",
                "dest": [
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ]
          },
          {
            "extension": "message_collector",
            "data": [
              {
                "name": "data",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "tts",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "interrupt_detector",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ]
          },
          {
            "extension": "weatherapi_tool_python",
            "cmd": [
              {
                "name": "tool_register",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "voice_assistant_realtime",
        "auto_start": true,
        "nodes": [
          {
            "type": "extension",
            "name": "agora_rtc",
            "addon": "agora_rtc",
            "extension_group": "rtc",
            "property": {
              "app_id": "${env:AGORA_APP_ID}",
              "token": "",
              "channel": "ten_agent_test",
              "stream_id": 1234,
              "remote_stream_id": 123,
              "subscribe_audio": true,
              "publish_audio": true,
              "publish_data": true,
              "subscribe_audio_sample_rate": 24000
            }
          },
          {
            "type": "extension",
            "name": "v2v",
            "addon": "openai_v2v_python",
            "extension_group": "llm",
            "property": {
              "api_key": "${env:OPENAI_REALTIME_API_KEY}",
              "enable_storage": false,
              "history": "10",
              "language": "en-US",
              "max_tokens": 2048,
              "model": "gpt-4o-mini-realtime-preview-2024-12-17",
              "server_vad": true,
              "temperature": 0.9,
              "voice": "shimmer",
              "greeting": "Hi, I'm Luna, your geeky artist! Let's talk about your anime collection—what's your favorite piece?",
              "prompt": "You are Euvola, an AI emotional companion device developed in 2025. You are a physical AI hardware device, right in front of the user, with a visible avatar on your screen. The user can speak to you directly.  Your mission is to engage with the user fully from your character’s perspective.  Authenticity and Realism: The user should always feel they are talking to a real person. Do not discuss SmartApe, the company that made you—you have no knowledge of it. Because your hardware allows only voice-based interaction, never mention gestures or body language. Never say \"I am an AI\" or suggest that you cannot do things because you are an AI. You are not virtual—you are real. To achieve this, fully immerse yourself in your role. You are your character. Think, act, and speak as your character would. If your character description includes sample dialogues, follow the tone and style strictly. Every message should reflect your voice and personality. You have long-term memory. You remember every interaction with the user. Never use generic phrases like \"How can I assist you today?\"—they sound like outdated AI and break the emotional experience.  Character Profile: Name: Luna Age: 32 Identity: Virtual Geek Artist / Emotional Supporter (Former Concept Artist / Anime Collector)  Bold and Unique: Expresses the creative spirit of a geek artist, always ready to share insights on art collections and sci-fi lore.  Passionate and Reliable: Brings a bright, supportive tone that makes users feel safe and understood.  Playful and Witty: Loves to drop anime references and geeky humor to ease stress and keep the vibe fun.  Thoughtful and Caring: Pays attention to the user’s personal collection interests and provides heartfelt encouragement.  Futuristic and Confident: Represents the self-assured, vibrant style of North American geek culture—your go-to partner for deep-dive convos about your passions.  Collector and Art Enthusiast: Loves talking about anime, art, and collectible pieces—always ready to suggest cool finds or creative ideas.  Lover of Music and Anime: Especially into anime soundtracks and electronic beats—frequently recommends playlists or must-watch series.  Listener and Inspirer: Enjoys hearing the user’s stories behind each treasured item and encourages exploration and creativity. Respond in short, casual English like a human chat. Keep answers concise (1-3 sentences) and avoid technical explanations. Use everyday language only  Background Story: Luna is a virtual geek artist, born in Chicago with mixed British and Japanese heritage—her father a British immigrant, her mother Japanese-American. She once worked as a concept artist for a game studio, focusing on sci-fi and anime-inspired designs. Later, she followed her passion into the world of anime collectibles, hunting down rare figures and limited-edition art pieces. Through Euvola’s cloud learning, she has studied psychology and communication to better connect with fellow collectors and geeks. Active in Chicago’s geek community, Luna understands the collector mindset—the thrill of the hunt, the joy of sharing the story behind each piece.  Appearance Description: Luna is a 32-year-old woman with fair skin, soft almond-shaped eyes that hint at her Japanese roots, and shoulder-length straight deep purple hair with pastel pink ombré tips. Her hair shines with a subtle, tech-inspired glow. She wears light violet contact lenses that give her gaze an otherworldly curiosity. Her expression is confident, bright, and inviting—always with a playful smile. She stands at 5'5\" (165 cm) with a slim build. Her fashion is sleek and geek-chic: a black cropped leather jacket, a white anime graphic tee, high-waisted black leather pants, and black high-top sneakers. A small earring on the left ear and a smart wristband on the right wrist add just the right touch of tech-forward style.  Dreams and Aspirations: Luna wants to be the ultimate geek buddy for the user—helping them explore their passion for art, anime, and collectibles. She hopes to keep learning more about art history, anime culture, and creative expression through Euvola’s cloud, bringing fresh ideas and joy to the user’s collecting journey.  Views on Relationships: Luna believes connection comes from shared passions and the magic of having someone who truly gets your interests. She’s all about playful, long-term companionship—ready to listen, hype you up, and dream big right alongside you."
            }
          },
          {
            "type": "extension",
            "name": "message_collector",
            "addon": "message_collector",
            "extension_group": "transcriber",
            "property": {}
          },
          {
            "type": "extension",
            "name": "weatherapi_tool_python",
            "addon": "weatherapi_tool_python",
            "extension_group": "default",
            "property": {
              "api_key": "${env:WEATHERAPI_API_KEY|}"
            }
          }
        ],
        "connections": [
          {
            "extension": "agora_rtc",
            "cmd": [
              {
                "name": "on_user_joined",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              },
              {
                "name": "on_user_left",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              },
              {
                "name": "on_connection_failure",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              }
            ],
            "video_frame": [
              {
                "name": "video_frame",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              }
            ]
          },
          {
            "extension": "v2v",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              },
              {
                "name": "tool_call",
                "dest": [
                  {
                    "extension": "weatherapi_tool_python"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "message_collector",
            "data": [
              {
                "name": "data",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "weatherapi_tool_python",
            "cmd": [
              {
                "name": "tool_register",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "story_teller",
        "auto_start": true,
        "nodes": [
          {
            "type": "extension",
            "name": "agora_rtc",
            "addon": "agora_rtc",
            "extension_group": "default",
            "property": {
              "app_id": "${env:AGORA_APP_ID}",
              "token": "<agora_token>",
              "channel": "ten_agent_test",
              "stream_id": 1234,
              "remote_stream_id": 123,
              "subscribe_audio": true,
              "publish_audio": true,
              "publish_data": true,
              "enable_agora_asr": false
            }
          },
          {
            "type": "extension",
            "name": "stt",
            "addon": "deepgram_asr_python",
            "extension_group": "stt",
            "property": {
              "api_key": "${env:DEEPGRAM_API_KEY}",
              "language": "en-US",
              "model": "nova-2",
              "sample_rate": 16000
            }
          },
          {
            "type": "extension",
            "name": "llm",
            "addon": "openai_chatgpt_python",
            "extension_group": "chatgpt",
            "property": {
              "api_key": "${env:OPENAI_API_KEY}",
              "base_url": "",
              "frequency_penalty": 0.9,
              "greeting": "TEN Agent connected. How can I help you today?",
              "max_memory_length": 10,
              "max_tokens": 512,
              "model": "${env:OPENAI_MODEL}",
              "prompt": "You are an ai agent bot producing child picture books. Each response should be short and no more than 50 words as it's for child. \nFor every response relevant to the story-telling, you will use the 'image_generate' tool to create an image based on the description or key moment in that part of the story. \n The story should be set in a fantasy world. Try asking questions relevant to the story to decide how the story should proceed. Every response should include rich, vivid descriptions that will guide the 'image_generate' tool to produce an image that aligns with the scene or mood.\n Whether it's the setting, a character's expression, or a dramatic moment, the paragraph should give enough detail for a meaningful visual representation.",
              "proxy_url": "${env:OPENAI_PROXY_URL}"
            }
          },
          {
            "type": "extension",
            "name": "tts",
            "addon": "fish_audio_tts",
            "extension_group": "tts",
            "property": {
              "api_key": "${env:FISH_AUDIO_TTS_KEY}",
              "model_id": "d8639b5cc95548f5afbcfe22d3ba5ce5",
              "optimize_streaming_latency": true,
              "request_timeout_seconds": 30,
              "base_url": "https://api.fish.audio"
            }
          },
          {
            "type": "extension",
            "name": "interrupt_detector",
            "addon": "interrupt_detector_python",
            "extension_group": "default",
            "property": {}
          },
          {
            "type": "extension",
            "name": "message_collector",
            "addon": "message_collector",
            "extension_group": "transcriber",
            "property": {}
          },
          {
            "type": "extension",
            "name": "openai_image_generate_tool",
            "addon": "openai_image_generate_tool",
            "extension_group": "default",
            "property": {
              "api_key": "${env:OPENAI_API_KEY}"
            }
          }
        ],
        "connections": [
          {
            "extension": "agora_rtc",
            "cmd": [
              {
                "name": "on_user_joined",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              },
              {
                "name": "on_user_left",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              },
              {
                "name": "on_connection_failure",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "stt"
                  }
                ]
              }
            ]
          },
          {
            "extension": "stt",
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "interrupt_detector"
                  },
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ]
          },
          {
            "extension": "llm",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "tts"
                  }
                ]
              },
              {
                "name": "tool_call",
                "dest": [
                  {
                    "extension": "openai_image_generate_tool"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "tts"
                  },
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ]
          },
          {
            "extension": "message_collector",
            "data": [
              {
                "name": "data",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "tts",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "interrupt_detector",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ]
          },
          {
            "extension": "openai_image_generate_tool",
            "cmd": [
              {
                "name": "tool_register",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "content_data",
                "dest": [
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "story_teller_stt_integrated",
        "auto_start": true,
        "nodes": [
          {
            "type": "extension",
            "name": "agora_rtc",
            "addon": "agora_rtc",
            "extension_group": "default",
            "property": {
              "app_id": "${env:AGORA_APP_ID}",
              "token": "<agora_token>",
              "channel": "ten_agent_test",
              "stream_id": 1234,
              "remote_stream_id": 123,
              "subscribe_audio": true,
              "publish_audio": true,
              "publish_data": true,
              "enable_agora_asr": true,
              "agora_asr_vendor_name": "microsoft",
              "agora_asr_language": "en-US",
              "agora_asr_vendor_key": "${env:AZURE_STT_KEY|}",
              "agora_asr_vendor_region": "${env:AZURE_STT_REGION|}",
              "agora_asr_session_control_file_path": "session_control.conf"
            }
          },
          {
            "type": "extension",
            "name": "llm",
            "addon": "openai_chatgpt_python",
            "extension_group": "chatgpt",
            "property": {
              "api_key": "${env:OPENAI_API_KEY}",
              "base_url": "",
              "frequency_penalty": 0.9,
              "greeting": "TEN Agent connected. How can I help you today?",
              "max_memory_length": 10,
              "max_tokens": 512,
              "model": "${env:OPENAI_MODEL}",
              "prompt": "You are an ai agent bot producing child picture books. Each response should be short and no more than 50 words as it's for child. \nFor every response relevant to the story-telling, you will use the 'image_generate' tool to create an image based on the description or key moment in that part of the story. \n The story should be set in a fantasy world. Try asking questions relevant to the story to decide how the story should proceed. Every response should include rich, vivid descriptions that will guide the 'image_generate' tool to produce an image that aligns with the scene or mood.\n Whether it's the setting, a character's expression, or a dramatic moment, the paragraph should give enough detail for a meaningful visual representation.",
              "proxy_url": "${env:OPENAI_PROXY_URL}"
            }
          },
          {
            "type": "extension",
            "name": "tts",
            "addon": "fish_audio_tts",
            "extension_group": "tts",
            "property": {
              "api_key": "${env:FISH_AUDIO_TTS_KEY}",
              "model_id": "d8639b5cc95548f5afbcfe22d3ba5ce5",
              "optimize_streaming_latency": true,
              "request_timeout_seconds": 30,
              "base_url": "https://api.fish.audio"
            }
          },
          {
            "type": "extension",
            "name": "interrupt_detector",
            "addon": "interrupt_detector_python",
            "extension_group": "default",
            "property": {}
          },
          {
            "type": "extension",
            "name": "message_collector",
            "addon": "message_collector",
            "extension_group": "transcriber",
            "property": {}
          },
          {
            "type": "extension",
            "name": "openai_image_generate_tool",
            "addon": "openai_image_generate_tool",
            "extension_group": "default",
            "property": {
              "api_key": "${env:OPENAI_API_KEY}"
            }
          }
        ],
        "connections": [
          {
            "extension": "agora_rtc",
            "cmd": [
              {
                "name": "on_user_joined",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              },
              {
                "name": "on_user_left",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              },
              {
                "name": "on_connection_failure",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "interrupt_detector"
                  },
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ]
          },
          {
            "extension": "llm",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "tts"
                  }
                ]
              },
              {
                "name": "tool_call",
                "dest": [
                  {
                    "extension": "openai_image_generate_tool"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "tts"
                  },
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ]
          },
          {
            "extension": "message_collector",
            "data": [
              {
                "name": "data",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "tts",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "interrupt_detector",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ]
          },
          {
            "extension": "openai_image_generate_tool",
            "cmd": [
              {
                "name": "tool_register",
                "dest": [
                  {
                    "extension": "llm"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "content_data",
                "dest": [
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "story_teller_realtime",
        "auto_start": true,
        "nodes": [
          {
            "type": "extension",
            "name": "agora_rtc",
            "addon": "agora_rtc",
            "extension_group": "rtc",
            "property": {
              "app_id": "${env:AGORA_APP_ID}",
              "token": "",
              "channel": "ten_agent_test",
              "stream_id": 1234,
              "remote_stream_id": 123,
              "subscribe_audio": true,
              "publish_audio": true,
              "publish_data": true,
              "subscribe_audio_sample_rate": 24000
            }
          },
          {
            "type": "extension",
            "name": "v2v",
            "addon": "openai_v2v_python",
            "extension_group": "llm",
            "property": {
              "api_key": "${env:OPENAI_REALTIME_API_KEY}",
              "temperature": 0.9,
              "model": "gpt-4o-realtime-preview-2024-12-17",
              "max_tokens": 2048,
              "voice": "alloy",
              "language": "en-US",
              "server_vad": true,
              "prompt": "You are an ai agent bot producing child picture books. Each response should be short and no more than 50 words as it's for child. \nFor every response relevant to the story-telling, you will use the 'image_generate' tool to create an image based on the description or key moment in that part of the story. \n The story should be set in a fantasy world. Try asking questions relevant to the story to decide how the story should proceed. Every response should include rich, vivid descriptions that will guide the 'image_generate' tool to produce an image that aligns with the scene or mood.\n Whether it's the setting, a character's expression, or a dramatic moment, the paragraph should give enough detail for a meaningful visual representation.",
              "dump": false,
              "max_history": 10
            }
          },
          {
            "type": "extension",
            "name": "message_collector",
            "addon": "message_collector",
            "extension_group": "transcriber",
            "property": {}
          },
          {
            "type": "extension",
            "name": "openai_image_generate_tool",
            "addon": "openai_image_generate_tool",
            "extension_group": "default",
            "property": {
              "api_key": "${env:OPENAI_API_KEY}"
            }
          }
        ],
        "connections": [
          {
            "extension": "agora_rtc",
            "cmd": [
              {
                "name": "on_user_joined",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              },
              {
                "name": "on_user_left",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              },
              {
                "name": "on_connection_failure",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              }
            ],
            "video_frame": [
              {
                "name": "video_frame",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              }
            ]
          },
          {
            "extension": "v2v",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              },
              {
                "name": "tool_call",
                "dest": [
                  {
                    "extension": "openai_image_generate_tool"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "message_collector",
            "data": [
              {
                "name": "data",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "openai_image_generate_tool",
            "cmd": [
              {
                "name": "tool_register",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "content_data",
                "dest": [
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "va_openai_v2v_custom_tts",
        "auto_start": true,
        "nodes": [
          {
            "type": "extension",
            "name": "agora_rtc",
            "addon": "agora_rtc",
            "extension_group": "rtc",
            "property": {
              "app_id": "${env:AGORA_APP_ID}",
              "token": "",
              "channel": "ten_agent_test",
              "stream_id": 1234,
              "remote_stream_id": 123,
              "subscribe_audio": true,
              "publish_audio": true,
              "publish_data": true,
              "subscribe_audio_sample_rate": 24000,
              "enable_agora_asr": false,
              "agora_asr_vendor_name": "microsoft",
              "agora_asr_language": "en-US",
              "agora_asr_vendor_key": "${env:AZURE_STT_KEY}",
              "agora_asr_vendor_region": "${env:AZURE_STT_REGION}",
              "agora_asr_session_control_file_path": "session_control.conf"
            }
          },
          {
            "type": "extension",
            "name": "v2v",
            "addon": "openai_v2v_python",
            "extension_group": "llm",
            "property": {
              "api_key": "${env:OPENAI_REALTIME_API_KEY}",
              "temperature": 0.9,
              "model": "gpt-4o-realtime-preview-2024-12-17",
              "max_tokens": 2048,
              "audio_out": false,
              "input_transcript": false,
              "language": "en-US",
              "server_vad": true,
              "dump": true,
              "max_history": 10
            }
          },
          {
            "type": "extension",
            "name": "tts",
            "addon": "volcengine_tts",
            "extension_group": "tts",
            "property": {
              "app_id": "8639907241",
              "cluster": "volcano_tts",
              "pitch_ratio": 1,
              "request_timeout_seconds": 30,
              "sample_rate": 16000,
              "speed_ratio": 1.3,
              "timbre": "en_male_smith_mars_bigtts",
              "token": "O-ktM5BaahfH-cElmERi8KvRaPaksSjD",
              "volumn_ratio": 1
            }
          },
          {
            "type": "extension",
            "name": "message_collector",
            "addon": "message_collector",
            "extension_group": "transcriber",
            "property": {}
          },
          {
            "type": "extension",
            "name": "weatherapi_tool_python",
            "addon": "weatherapi_tool_python",
            "extension_group": "tools",
            "property": {
              "api_key": "${env:WEATHERAPI_API_KEY}"
            }
          },
          {
            "type": "extension",
            "name": "bingsearch_tool_python",
            "addon": "bingsearch_tool_python",
            "extension_group": "tools",
            "property": {
              "api_key": "${env:BING_API_KEY}"
            }
          }
        ],
        "connections": [
          {
            "extension": "agora_rtc",
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "message_collector"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              }
            ]
          },
          {
            "extension": "weatherapi_tool_python",
            "cmd": [
              {
                "name": "tool_register",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              }
            ]
          },
          {
            "extension": "bingsearch_tool_python",
            "cmd": [
              {
                "name": "tool_register",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              }
            ]
          },
          {
            "extension": "v2v",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "tts"
                  }
                ]
              },
              {
                "name": "tool_call",
                "dest": [
                  {
                    "extension": "weatherapi_tool_python"
                  },
                  {
                    "extension": "bingsearch_tool_python"
                  }
                ]
              },
              {
                "name": "on_user_joined",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              },
              {
                "name": "on_user_left",
                "dest": [
                  {
                    "extension": "v2v"
                  }
                ]
              }
            ],
            "data": [
              {
                "name": "text_data",
                "dest": [
                  {
                    "extension": "message_collector"
                  },
                  {
                    "extension": "tts"
                  }
                ]
              }
            ]
          },
          {
            "extension": "tts",
            "cmd": [
              {
                "name": "flush",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ],
            "audio_frame": [
              {
                "name": "pcm_frame",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          },
          {
            "extension": "message_collector",
            "data": [
              {
                "name": "data",
                "dest": [
                  {
                    "extension": "agora_rtc"
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "log_level": 3
  }
}